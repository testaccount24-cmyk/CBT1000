/* Rexx                                                               */
/* EXEC generated by MASSCHG to process members in batch              */
Parse Source . . execmbr . execdsn .
)BLANK
exitrc = 0
edrccnt. = 0
statcnt  = 0
proccnt  = 0
masscdsn = "&MASSCDSN"
masscds2 = "&MASSCDS2"
masscds3 = "&MASSCDS3"
masscds4 = "&MASSCDS4"
masscpat = "&MASSCPAT"
masscmac = "&MASSCMAC"
massparm = "&MASSPARM"
massstat = "&MASSSTAT"
massprog = "&MASSPROG"
massrlse = "&MASSRLSE"
massexec = "&MASSEXEC"
masslibs = "&MASSLIBS"
If massexec /= "" Then
  Call Do_ALTLIB_LIBDEFs
)BLANK
macparm1 = ,
 "&MACPARM1"
macparm2 = ,
 "&MACPARM2"
macparm3 = ,
 "&MACPARM3"
macparm4 = ,
 "&MACPARM4"
Address ISPEXEC "VPUT (MACPARM1 MACPARM2 MACPARM3 MACPARM4) SHARED"
Call Write_output_header
)BLANK
Address TSO "ALLOC F(F&UNIQUE) SHR REUSE " ,
  "DA(&MASSCDSN " ,
  "   &MASSCDS2 " ,
  "   &MASSCDS3 " ,
  "   &MASSCDS4 )"
Call Chkrc rc,"ALLOCATE F&UNIQUE"
)BLANK
Address ISPEXEC" LMINIT DATAID(MASSID1) DDNAME(F&UNIQUE) ENQ(SHRW)"
Call Chkrc rc,"LMINIT"
Address ISPEXEC" LMOPEN DATAID("massid1") OPTION(INPUT) " ,
               "  LRECL(DLVAR) RECFM(RFVAR) ORG(ORGVAR)"
Call Chkrc rc,"LMOPEN"
)BLANK
Address TSO "ALLOC FI(M&UNIQUE) SHR REUSE" ,
            "DA('"&MEMDSN"')"
Call Chkrc rc,"ALLOCATE M&UNIQUE"
Address TSO "execio * diskr M&UNIQUE (stem mem. finis "
Call Chkrc rc,"EXECIO DISKR M&UNIQUE"
Address TSO "FREE FI(M&UNIQUE)"
Call Chkrc rc,"FREE M&UNIQUE"
)BLANK
massexit = ""
Address ISPEXEC "VPUT (MASSEXIT) SHARED"
)BLANK
massmemt = mem.0
Do massmem# = 1 To mem.0 While massexit = ""
  massmemf = "NO"
  massmeml = "NO"
  If massmem# = 1 Then
    massmemf = "YES"
  If massmem# = massmemt Then
    massmeml = "YES"
  Address ISPEXEC" VPUT (MASSMEMF,MASSMEML,MASSMEM#,MASSMEMT) SHARED"
)BLANK
  Parse Var mem.massmem# member .
)SEL &MASSSTAT = YES
)BLANK
  Address ISPEXEC" LMMFIND DATAID("massid1") MEMBER("member")" ,
                 " STATS(YES)"
  Call Chkrc rc,"LMMFIND"
)ENDSEL
)BLANK
  If massparm /= "" Then
    macparm = "PARM(MASSPARM)"
  Else
    macparm = ""
  Address ISPEXEC" EDIT DATAID("massid1") MEMBER("member")" ,
            " MACRO(&MASSCMAC) CONFIRM(NO) "macparm
  editrc = rc
  edrccnt.editrc = edrccnt.editrc + 1
  If massprog = "YES" Then
    Say Time() "MEMBER "Left(member,8)" - rc="editrc ,
        " ("massmem#" of "massmemt")"
)SEL &MASSSTAT = YES
)BLANK
  If editrc = 0 Then
    Do
      Address ISPEXEC "LMMSTATS DATAID("massid1") MEMBER("member")" ,
                      "CREATED("zlcdate") MODDATE("zlmdate")",
                      "MODTIME("zlmtime":"zlmsec")" ,
                      "INITSIZE("zlinorc")",
                      "MODRECS("zlmnorc") USER("zluser")"
      Call Chkrc rc,"LMMSTATS"
      statcnt = statcnt + 1
    End
)ENDSEL
)BLANK
  proccnt = proccnt + 1
  Address ISPEXEC "VGET (MASSEXIT) SHARED"
  If massexit /= "" Then
    Do
      Say "Processing Interrupted by MASSEXIT variable set to "massexit
      exitrc = 8
    End
End
)BLANK
Address ISPEXEC "LMCLOSE DATAID("massid1")"
Call Chkrc rc,"LMCLOSE"
Address ISPEXEC "LMFREE   DATAID("massid1")"
Call Chkrc rc,"LMFREE"
Address TSO "FREE F(F&UNIQUE)"
Call Chkrc rc,"FREE F&UNIQUE"
)BLANK
Call Write_output_summary
zispfrc = exitrc
Address ISPEXEC "VPUT (ZISPFRC) SHARED"
Exit exitrc
)BLANK
Chkrc: Procedure
Arg rcin, function
If rcin /= 0 Then
  Do
    Say "MASSBAT1 Exec - "function" Issued Return Code "rcin
    zispfrc = 8
    Address ISPEXEC "VPUT (ZISPFRC) SHARED"
    Exit 8
  End
Return
)BLANK
Write_output_header:
Say ""
Say ""
Say "               Edit Macro Mass Change Facility       "
Say "                 " massrlse Date() Time()
Say ""
Say "Data set(s) to be processed: "masscdsn
If masscds2 /= "" Then
  Say  "                           : "masscds2
If masscds3 /= "" Then
  Say  "                           : "masscds3
If masscds4 /= "" Then
  Say  "                           : "masscds4
Say  ""
Say "Member list pattern: "masscpat
Say "Name of edit macro:  "masscmac
Say "Macro parameter:     "massparm
Say "Restore statistics:  "massstat
Say "Show progress:       "massprog
If macparm1 /= "" Then
  Do
  Say ""
  Say "MACPARM1:" ,
    macparm1
  End
If macparm1 /= "" Then
  Say "MACPARM2:" ,
    macparm2
If macparm1 /= "" Then
  Say "MACPARM3:" ,
    macparm3
If macparm1 /= "" Then
  Say "MACPARM4:" ,
    macparm4
Say ""
Say ""
If masscmac = "$FNDIT" Then
 Say "Member      Line #       Text found "
Return
)BLANK
Write_output_summary:
Say ""
Say ""
Say "                          Summary                       "
Say "                   " Date() Time()
Say ""
Say "Members selected: " mem.0
Say "Members processed:" proccnt
Say "Stats restored:   " statcnt
Say ""
Say "Members saved:    " edrccnt.0
Say "Members not saved:" edrccnt.4
Say ""

Address ISPEXEC "VGET (MASS$LOG) SHARED"
If mass$log /= "" Then
  Do
    Say "$LOGIT output written to" mass$log
    Say ""
  End
Return
)BLANK
Do_ALTLIB_LIBDEFs:
)BLANK
dsnparts = Translate(massexec," ",".")
dsnprefix = Translate(Subword(dsnparts,1,Words(dsnparts)-1),"."," ")
)BLANK
x = Listdsi("'"massexec"'")
If x /= 0 Then
  Do
    Say "Could not locate DSN="massexec
    Exit 8
  End

Address TSO "ALTLIB ACTIVATE APPLICATION(EXEC)" ,
        "DA('"massexec"')"
)BLANK
Do l = 1 to Words(masslibs)
  lib = Word(masslibs,l)
  Parse Var lib dd "." qual
  libdsn = dsnprefix"."qual
  Address ISPEXEC "LIBDEF" dd "DATASET" ,
          "ID('"libdsn"')"
End
)BLANK
Return
